# MousePaw Media: Matrix Builder

This runs a Central Matrix build according to the MousePaw Media Build System.
Central builds are meant to provide static dependencies to the regular
Matrix builds on the same Jenkins instance.

## Requirements and Assumptions

The Jenkins instance using this must provide Docker agents from the
Dockerfiles provided in this repository. These should have the labels
`mpm-CODENAME`, where `CODENAME` is the Ubuntu codename that relates to the
Docker image, e.g. `mpm-focal`.

Git must be configured on the Jenkins instance as well, using the
credential ID `git-ssh`.

The repository must use the MousePaw Media Build System 3.2.0 or later.
The build will use the `make ready` target.

## Calling

Two parameters are required when calling this pipeline:

* `project`: the name of the project
* `repo`: the SSH URL for the repository to clone

In a Pipeline, assuming this library has been imported, call like this:

```groovy
cppMatrixCentral(
    project: 'spam-n-eggs',
    repo: 'ssh://git@example.com/source/spameggs.git'
)
```

When triggering the build, you may specify any of the following additional
parameters, all of which are optional:

* `BRANCH`: the branch to build/patch on (default `devel`).
* `PHID`: the Phabricator UUID for the object triggering the build, used for
  reporting build status via Harbormaster.
* `OS_FILTER`: an option parameter for selecting which OS to build for.

The Matrix build will go through six steps:

* Canary: checkout & build the Debug version of the code without testing, to
  verify there are no major compiler or environment errors.
* Matrix: build on all OSes, compilers, and targets
  * Checkout: Clone the repository.
  * Stage Environment: Switch to the selected compiler.
  * Build: Build with `make ready`.
  * Report: If `PHID` was provided, send partial results back to Harbormaster
    for this matrix build.
* Final Report: If `PHID` was provided, send final results back to Harbormaster
  for the entire build.
